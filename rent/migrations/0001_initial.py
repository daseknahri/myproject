# Generated by Django 5.1.4 on 2025-02-23 22:45

import datetime
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import imagekit.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(max_length=20, verbose_name='Brand')),
                ('model', models.CharField(max_length=20, verbose_name='Model')),
                ('plate_number', models.CharField(max_length=20, unique=True, verbose_name='Registration Plate')),
                ('image', imagekit.models.fields.ProcessedImageField(upload_to='cars/', verbose_name='Image')),
                ('year', models.PositiveIntegerField(default=2024, verbose_name='Year')),
                ('gearbox', models.CharField(choices=[('manual', 'Manual'), ('automatic', 'Automatic'), ('semi-automatic', 'Semi-Automatic')], default='manual', max_length=20, verbose_name='Transmission')),
                ('fuel_type', models.CharField(choices=[('petrol', 'Petrol'), ('diesel', 'Diesel'), ('electric', 'Electric'), ('hybrid', 'Hybrid')], default='Diesel', max_length=20, verbose_name='Fuel Type')),
                ('number_of_passengers', models.PositiveIntegerField(default=5, verbose_name='Number of passengers')),
                ('daily_rate', models.DecimalField(decimal_places=2, default=300, max_digits=10, verbose_name='Daily Rate')),
                ('total_expenditure', models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='Total Expenditure')),
                ('is_available', models.BooleanField(default=True, verbose_name='Available')),
            ],
            options={
                'verbose_name': 'Car',
                'verbose_name_plural': 'Cars',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='City')),
            ],
            options={
                'verbose_name': 'City',
                'verbose_name_plural': 'City',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='Name')),
                ('phone_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\+?\\d{9,15}$', 'Enter a valid phone number.')], verbose_name='Phone Number')),
                ('address', models.CharField(max_length=100, verbose_name='Address')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('identity_card_number', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator('^[A-Za-z0-9-]+$', 'Enter a valid ID card number.')], verbose_name='Identity Card Number')),
                ('driver_license_number', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator('^[A-Za-z0-9-]+$', 'Enter a valid driver’s license number.')], verbose_name="Driver's License Number")),
                ('total_amount_paid', models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='Total Amount Paid')),
                ('total_amount_due', models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='Total Amount Due')),
                ('identity_card_front', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to='clients/identity_cards/fronts/', verbose_name='Identity Card Front')),
                ('identity_card_back', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to='clients/identity_cards/backs/', verbose_name='Identity Card Back')),
                ('driver_license_front', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to='clients/driver_licenses/fronts/', verbose_name='Driver License Front')),
                ('driver_license_back', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to='clients/driver_licenses/backs/', verbose_name='Driver License Back')),
                ('passport_image', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to='clients/passports/', verbose_name='Passport Image')),
                ('rating', models.PositiveSmallIntegerField(default=0, help_text='Rating of the client (1 to 5)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Client Rating')),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
            },
        ),
        migrations.CreateModel(
            name='CustomerInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=20)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='Name')),
                ('phone_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\+?\\d{9,15}$', 'Enter a valid phone number.')], verbose_name='Phone Number')),
                ('address', models.CharField(max_length=100, verbose_name='Address')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('identity_card_number', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator('^[A-Za-z0-9-]+$', 'Enter a valid ID card number.')], verbose_name='Identity Card Number')),
                ('driver_license_number', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator('^[A-Za-z0-9-]+$', 'Enter a valid driver’s license number.')], verbose_name="Driver's License Number")),
                ('identity_card_front', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to='drivers/identity_cards/fronts/', verbose_name='Identity Card Front')),
                ('identity_card_back', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to='drivers/identity_cards/backs/', verbose_name='Identity Card Back')),
                ('driver_license_front', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to='drivers/driver_licenses/fronts/', verbose_name='Driver License Front')),
                ('driver_license_back', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to='drivers/driver_licenses/backs/', verbose_name='Driver License Back')),
                ('passport_image', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to='drivers/passports/', verbose_name='Passport Image')),
            ],
            options={
                'verbose_name': 'Driver',
                'verbose_name_plural': 'Drivers',
            },
        ),
        migrations.CreateModel(
            name='ExpenditureType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=20, verbose_name='Type')),
            ],
            options={
                'verbose_name': 'Expenditures Type',
                'verbose_name_plural': 'Expenditures Types',
            },
        ),
        migrations.CreateModel(
            name='CarExpenditure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=50, verbose_name='Description')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Cost')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Date')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expenditures', to='rent.car', verbose_name='Car')),
            ],
            options={
                'verbose_name': 'Car Expenditure',
                'verbose_name_plural': 'Car Expenditures',
            },
        ),
        migrations.CreateModel(
            name='BusinessExpenditure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Amount')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Date')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='BusinessExpenditures', to='rent.expendituretype', verbose_name='Type')),
            ],
            options={
                'verbose_name': 'Business Expenditure',
                'verbose_name_plural': 'Business Expenditures',
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(verbose_name='End Date')),
                ('pickup_time', models.TimeField(default=datetime.datetime(2025, 2, 23, 22, 45, 9, 34377, tzinfo=datetime.timezone.utc), verbose_name='Pickup Time')),
                ('dropoff_time', models.TimeField(default=datetime.datetime(2025, 2, 23, 22, 45, 9, 34377, tzinfo=datetime.timezone.utc), verbose_name='Dropoff Time')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed')], default='pending', max_length=20, verbose_name='Status')),
                ('actual_daily_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Actual Daily Rate')),
                ('total_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=12, verbose_name='Total Cost')),
                ('payment_status', models.CharField(choices=[('Paid', 'Paid'), ('Partially Paid', 'Partially Paid'), ('Unpaid', 'Unpaid')], default='Unpaid', max_length=20, verbose_name='Payment Status')),
                ('total_paid', models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='Total Paid')),
                ('pdf_receipt', models.FileField(blank=True, null=True, upload_to='reservations/pdfs/', verbose_name='PDF Receipt')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='rent.car', verbose_name='Car')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='rent.client', verbose_name='Client')),
                ('drivers', models.ManyToManyField(blank=True, related_name='reservations', to='rent.driver', verbose_name='Drivers')),
                ('dropoff_adresse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dropoff_reservations', to='rent.city', verbose_name='Drop off Adresse')),
                ('pickup_adresse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pickup_reservations', to='rent.city', verbose_name='Pick up Adresse')),
            ],
            options={
                'verbose_name': 'Reservation',
                'verbose_name_plural': 'Reservations',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Amount Paid')),
                ('payment_date', models.DateField(default=django.utils.timezone.now, verbose_name='Payment Date')),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='rent.reservation', verbose_name='Reservation')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
            },
        ),
    ]
